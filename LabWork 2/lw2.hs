
-- Упр 1 
    -- 1 аргумент
    -- типы список 
    -- знаковое машинное целое
    -- выводит количество элементов списка: 4, 4, 5
-- Упр 2
    -- Первое компилируются,т.к. литерал 4 может принимать любой тип 
    -- в зависимости от контекста вычислений.
    -- Второе выражение не компилируется, 
    -- т.к. lenght возвращает целое число, а операция деления определена  
    -- только для чисел с плавающей точкой.
    -- исправить можно использовав fromIntegral
    -- 12/ fromIntegral (length[1,2,3])
-- Упр 3
    -- тип Bool результат True
-- Упр 4
    -- определяем переменную 3 
    -- Возвращает False, т.к. х определена ранее
-- Упр 5
    --1) Работает, возвращает false
    --2) Ошибка, т.к. в списке объявлены переменный разных типов
    --3) работает, т.к. первый литерал будет приведён к типу с плавающей точкой
    --4) Работает, результат 4
    --5) Работает, вернет false, т.к. ('b' > 'a')
    --6) Не работает, разные типы
-- Упр 6
isPalindrome :: String -> Bool
isPalindrome x = 
    if reverse x == x then True
    else False
-- Упр 7
f :: (a, b) -> (c, d) -> ((b, d), (a, c))
f x y= ((snd x,snd y),(fst x,fst y))
-- Упр 8
main = do
    msg <- getLine
    putStrLn (reverse msg)
